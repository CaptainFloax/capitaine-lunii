import {
  setAtPath
} from "./chunk-OUCLKSCB.js";
import "./chunk-AUZ3RYOM.js";

// node_modules/@legendapp/state/persist-plugins/local-storage.mjs
var MetadataSuffix = "__m";
var ObservablePersistLocalStorageBase = class {
  constructor(storage) {
    this.data = {};
    this.storage = storage;
  }
  getTable(table) {
    if (!this.storage)
      return void 0;
    if (this.data[table] === void 0) {
      try {
        const value = this.storage.getItem(table);
        this.data[table] = value ? JSON.parse(value) : void 0;
      } catch (_a) {
        console.error("[legend-state] ObservablePersistLocalStorage failed to parse", table);
      }
    }
    return this.data[table];
  }
  getMetadata(table) {
    return this.getTable(table + MetadataSuffix);
  }
  get(table, id) {
    const tableData = this.getTable(table);
    return tableData === null || tableData === void 0 ? void 0 : tableData[id];
  }
  set(table, changes) {
    if (!this.data[table]) {
      this.data[table] = {};
    }
    for (let i = 0; i < changes.length; i++) {
      const { path, valueAtPath, pathTypes } = changes[i];
      this.data[table] = setAtPath(this.data[table], path, pathTypes, valueAtPath);
    }
    this.save(table);
  }
  updateMetadata(table, metadata) {
    return this.setValue(table + MetadataSuffix, metadata);
  }
  deleteTable(table) {
    if (!this.storage)
      return void 0;
    delete this.data[table];
    this.storage.removeItem(table);
  }
  deleteMetadata(table) {
    this.deleteTable(table + MetadataSuffix);
  }
  // Private
  setValue(table, value) {
    this.data[table] = value;
    this.save(table);
  }
  save(table) {
    if (!this.storage)
      return void 0;
    const v = this.data[table];
    if (v !== void 0 && v !== null) {
      this.storage.setItem(table, JSON.stringify(v));
    } else {
      this.storage.removeItem(table);
    }
  }
};
var ObservablePersistLocalStorage = class extends ObservablePersistLocalStorageBase {
  constructor() {
    super(typeof localStorage !== "undefined" ? localStorage : void 0);
  }
};
var ObservablePersistSessionStorage = class extends ObservablePersistLocalStorageBase {
  constructor() {
    super(typeof sessionStorage !== "undefined" ? sessionStorage : void 0);
  }
};
export {
  ObservablePersistLocalStorage,
  ObservablePersistSessionStorage
};
//# sourceMappingURL=@legendapp_state_persist-plugins_local-storage.js.map
