{"version":3,"file":"use-user-agent.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as UAParser from 'ua-parser-js';\n\ntype IUseUserAgentReturn = Omit<UAParser.IResult, 'ua'>;\n\nfunction useUserAgent(uastring = window.navigator.userAgent) {\n  let [state, setState] = React.useState<IUseUserAgentReturn | null>(null);\n\n  React.useEffect(() => {\n    let didRun = true;\n\n    try {\n      const uaParser = new UAParser.UAParser();\n      uaParser.setUA(uastring);\n      const payload = {\n        os: uaParser.getOS(),\n        browser: uaParser.getBrowser(),\n        cpu: uaParser.getCPU(),\n        device: uaParser.getDevice(),\n        engine: uaParser.getEngine(),\n      };\n      if (didRun) {\n        setState(payload);\n      }\n    } catch (err) {\n      if (didRun) {\n        setState(null);\n      }\n    }\n\n    return () => {\n      didRun = false;\n    };\n  }, [uastring]);\n\n  return state;\n}\n\nexport { useUserAgent };\n"],"names":["uastring","window","navigator","userAgent","React","state","setState","didRun","uaParser","UAParser","setUA","payload","os","getOS","browser","getBrowser","cpu","getCPU","device","getDevice","engine","getEngine","err"],"mappings":"0IAKA,SAAsBA,YAAAA,IAAAA,EAAWC,OAAOC,UAAUC,WAChD,MAAwBC,WAA2C,MAA9DC,OAAOC,OA6BZ,OA3BAF,aAAgB,WACd,IAAIG,GAAS,EAEb,IACE,IAAMC,EAAW,IAAIC,WACrBD,EAASE,MAAMV,GACf,IAAMW,EAAU,CACdC,GAAIJ,EAASK,QACbC,QAASN,EAASO,aAClBC,IAAKR,EAASS,SACdC,OAAQV,EAASW,YACjBC,OAAQZ,EAASa,aAEfd,GACFD,EAASK,GAEX,MAAOW,GACHf,GACFD,EAAS,MAIb,OAAO,WACLC,GAAS,KAEV,CAACP,IAEGK"}